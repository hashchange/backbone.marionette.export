// Backbone.Marionette.Export, v3.0.0
// Copyright (c) 2013-2016 Michael Heim, Zeilenwechsel.de
// Distributed under MIT license
// http://github.com/hashchange/backbone.marionette.export


!function(a,b){"use strict";var c="object"==typeof exports&&exports&&!exports.nodeType&&"object"==typeof module&&module&&!module.nodeType;"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(["exports","underscore","backbone"],b):c?b(exports,require("underscore"),require("backbone")):b({},_,Backbone)}(this,function(a,_,Backbone){"use strict";function b(a){var b,c,d=[];if(Object.getPrototypeOf&&Object.getOwnPropertyNames)for(b=a;null!==b;b=Object.getPrototypeOf(b))d=d.concat(Object.getOwnPropertyNames(b));else for(c in a)d.push(c);return _.unique(d)}var c=b([]),d=Backbone.Marionette&&(Backbone.Marionette.ItemView||Backbone.Marionette.View);Backbone.Model.prototype.onBeforeExport=Backbone.Collection.prototype.onBeforeExport=function(){},Backbone.Model.prototype.onAfterExport=Backbone.Collection.prototype.onAfterExport=function(){},Backbone.Model.prototype.onExport=Backbone.Collection.prototype.onExport=function(a){return a},Backbone.Model.prototype.export=Backbone.Collection.prototype.export=function(){function a(a){return a&&a.export&&(a instanceof Backbone.Model||a instanceof Backbone.Collection)&&f<a.export.global.maxHops}var b,d,e,f;if(f=arguments.length?arguments[0]:0,this.onBeforeExport&&this.onBeforeExport(),this instanceof Backbone.Collection?b=this.map(function(b){return a(b)?b.export(f+1):b}):_.cloneDeep?b=_.cloneDeep(this.attributes,function(b){return a(b)?b.export(f+1):void 0}):(b=this.toJSON(),_.each(b,function(b,c,d){a(b)&&(d[c]=b.export(f+1))})),this.exportable&&(d=this.exportable,_.isArray(d)||(d=d?[d]:[]),_.each(d,function(c){var d,e=this.export.global.strict;if(_.isUndefined(c))throw new Error("Can't export method. Undefined method reference");if(!_.isString(c))throw new Error("'exportable' property: Invalid method identifier");if(d=0===c.indexOf("this.")?c.substr(5):c,!(d in this)&&e)throw new Error("Can't export \""+d+"\". The method doesn't exist");if(c=this[d],_.isFunction(c))b[d]=c.apply(this);else{if(this instanceof Backbone.Model&&e)throw new Error("'exportable' property: Invalid method identifier \""+d+'", does not point to a function');b[d]=this[d]}_.cloneDeep?b[d]=_.cloneDeep(b[d],function(b){return a(b)?b.export(f+1):void 0}):a(b[d])&&(b[d]=b[d].export(f+1)),_.isUndefined(b[d])&&delete b[d]},this)),this.onExport&&(b=this.onExport(b)),this.onAfterExport&&this.onAfterExport(),this instanceof Backbone.Collection&&(e=_.intersection(c,_.keys(b)),e.length))throw new Error("Can't export a property with a name which is reserved for a native array property. Offending properties: "+e.join(", "));return b},Backbone.Model.prototype.export.global=Backbone.Collection.prototype.export.global={maxHops:4,strict:!1,version:"3.0.0"},Backbone.Marionette&&(d.prototype.serializeData=Backbone.Marionette.CompositeView.prototype.serializeData=function(){var a={};return this.model?a=this.model.export&&this.model.export()||this.model.toJSON():this.collection&&(a={items:this.collection.export&&this.collection.export()||this.collection.toJSON()}),a}),a.info="Backbone.Marionette.Export has loaded. Don't use the exported value of the module. Its functionality is available inside the Backbone namespace."});
//# sourceMappingURL=backbone.marionette.export.min.js.map